# Generated by Django 2.0 on 2017-12-18 08:51

from django.conf import settings
from django.db import migrations, models


class AddField(migrations.AddField):
    """
    Allow adding a field to a model from a different application.

    This enables us to add the field to contrib.admin.LogEntry that
    stores the schema for an aware object.
    """

    def __init__(self, *args, **kwargs):
        self.app_label = kwargs.pop("app_label")
        super().__init__(*args, **kwargs)

    def state_forwards(self, app_label, state):
        return super().state_forwards(self.app_label, state)

    def database_forwards(self, app_label, *args):
        return super().database_forwards(self.app_label, *args)

    def database_backwards(self, app_label, *args):
        return super().database_backwards(self.app_label, *args)


TRIGGER_FUNCTION = (
    """CREATE OR REPLACE FUNCTION set_tenant_field()
RETURNS TRIGGER AS $$
DECLARE
  active_tenant TEXT;
BEGIN
  active_tenant = current_setting('occupation.active_tenant');
  IF active_tenant != '' THEN
      NEW.tenant_id = active_tenant::INTEGER;
  END IF;
  RETURN NEW;
END;

$$ LANGUAGE plpgsql""",
    "DROP FUNCTION set_tenant_field()",
)

TRIGGER = (
    """
CREATE TRIGGER set_tenant_field
BEFORE INSERT ON django_admin_log
FOR EACH ROW EXECUTE PROCEDURE set_tenant_field()""",
    "DROP TRIGGER set_tenant_field ON django_admin_log",
)


class Migration(migrations.Migration):

    dependencies = [("occupation", "0002_tenant_users")] + (
        [
            ("admin", "0001_initial"),
        ]
        if "django.contrib.admin" in settings.INSTALLED_APPS
        else []
    )

    operations = (
        [
            AddField(
                app_label="admin",
                model_name="logentry",
                name="tenant_id",
                field=models.IntegerField(blank=True, null=True),
                # field=models.ForeignKey(blank=True, null=True, to=settings.OCCUPATION_TENANT_MODEL, related_name='+', on_delete=models.SET_NULL),
            ),
            migrations.RunSQL(*TRIGGER_FUNCTION),
            migrations.RunSQL(*TRIGGER),
        ]
        if "django.contrib.admin" in settings.INSTALLED_APPS
        else []
    )
