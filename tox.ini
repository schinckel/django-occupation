[tox]
envlist =
  clean,
  flake8,
  py36-django20-{base,example1,flake8},
  docs
skip_missing_interpreters = true

[tox:travis]
3.6 = py36, flake8, docs

[flake8]
ignore=E305
max_line_length=119
exclude=migrations

[testenv]
basepython=python3.6
install_command=pip install --pre {opts} {packages}
deps=
  coverage
  django17: Django~=1.7
  django20: Django~=2.0
  base: hypothesis
  psycopg2
  pytz
  flake8: flake8
setenv=
  DB_NAME={envname}
commands=
  base: coverage run --parallel-mode --branch --source=occupation runtests.py
  example1: {[example1]commands}
  flake8: flake8 django_rls
whitelist_externals=
  example1: createdb
  example1: dropdb

[testenv:clean]
deps=
  coverage
commands=
  coverage erase

[testenv:docs]
changedir=docs
deps= -rdocs/requirements.txt
commands=
  make clean
  rm -rf source/code/*
  make apidocs
  make
  sphinx-build -b html -d build/doctrees source  build/html
whitelist_externals=
  /usr/bin/make
  /bin/rm

[example1:loaddata]
commands=
  python examples/boarding_school/manage.py migrate
  python examples/boarding_school/manage.py loaddata user
  python examples/boarding_school/manage.py loaddata schools
  python examples/boarding_school/manage.py loaddata --schema hamilton hamilton
  python examples/boarding_school/manage.py loaddata --schema naracoorte_hs naracoorte_hs

[example1]
commands=
  dropdb --if-exists {env:DB_NAME}
  createdb {env:DB_NAME}
  {[example1:loaddata]commands}
  python examples/school/manage.py migrate occupation zero
  {[example1:loaddata]commands}

[testenv:flake8]
basepython=python3.6
deps=
  flake8
commands=
  flake8 occupation

[testenv:isort]
# I can't seem to get this to reliably pick up the correct settings.
deps=
  isort
commands=
  isort -rc -c occupation

[testenv:pylint]
# We generally don't use this in automated tests, because it's too strict. Maybe after
# tweaking the config for it!
deps=
  pylint
  django
commands=
  pylint occupation

[testenv:mypy]
basepython=python3.6
setenv=
  MYPYPATH=stubs/out
deps=
  mypy-lang
  typing
commands=
  mypy occupation

[testenv:status]
deps=
  coverage==4.0.3
  python-coveralls
commands=
  coverage combine
  coverage report
  coveralls
  coverage report --fail-under=95
whitelist_externals=
  /bin/rm
passenv=
  COVERALLS_REPO_TOKEN

[testenv:dev-status]
deps=
  coverage
commands=
  coverage combine
  coverage report
  rm -rf htmlcov
  coverage html
whitelist_externals=
  /bin/rm

[testenv:mutants]
deps=
  mutpy
commands=
  mut.py --target django_rls --unit-test tests
