[tox]
envlist =
  clean,
  flake8,
  isort,
  py36-django{20,21,dev}-{base,example1,flake8},
  docs
skip_missing_interpreters = true

[tox:travis]
3.6 = py36, flake8, docs

[flake8]
ignore=E305
max_line_length=119
exclude=migrations

[coverage]
deps=
  coverage
  -e git+https://github.com/schinckel/django_coverage_plugin.git#egg=django_coverage_plugin

[testenv]
basepython=python3.6
install_command=pip install --pre {opts} {packages}
deps=
  {[coverage]deps}
  django20: Django>=2.0,<2.1
  django21: Django>=2.1b1
  djangodev: https://github.com/django/django/archive/master.tar.gz
  base: hypothesis
  psycopg2-binary
  pytz
  flake8: flake8
setenv=
  DB_NAME={envname}
  DB_USER={env:DB_USER:django}
passenv=
  USER
commands=
  base: coverage run --parallel-mode --branch --source=occupation runtests.py
  example1: {[example1]commands}
  flake8: flake8 src/occupation
whitelist_externals=
  example1: createdb
  example1: dropdb

[testenv:clean]
deps=
  coverage
  django_coverage_plugin
  django<2.1
commands=
  coverage erase

[testenv:docs]
changedir=docs
deps= -rdocs/requirements.txt
commands=
  make clean
  rm -rf source/code/*
  make apidocs
  make
  sphinx-build -b html -d build/doctrees source build/html
whitelist_externals=
  /usr/bin/make
  /bin/rm

[example1:loaddata]
commands=
  coverage run --parallel-mode --branch --source=occupation examples/school/project/manage.py migrate
  coverage run --parallel-mode --branch --source=occupation examples/school/project/manage.py loaddata user
  coverage run --parallel-mode --branch --source=occupation examples/school/project/manage.py loaddata schools
  coverage run --parallel-mode --branch --source=occupation examples/school/project/manage.py loaddata --tenant 1 hamilton
  coverage run --parallel-mode --branch --source=occupation examples/school/project/manage.py loaddata --tenant 2 naracoorte_hs

[example1]
changedir=examples/school/project
commands=
  dropdb --if-exists {env:DB_NAME}
  createdb {env:DB_NAME}
  {[example1:loaddata]commands}
  coverage run --parallel-mode --branch --source=occupation examples/school/project/manage.py migrate occupation zero
  {[example1:loaddata]commands}
  coverage run --parallel-mode --branch --source=occupation examples/school/project/manage.py test school

[testenv:flake8]
basepython=python3.6
deps=
  flake8
commands=
  flake8 src/ tests/

[testenv:isort]
# I can't seem to get this to reliably pick up the correct settings.
deps=
  isort
commands=
  isort -rc -c src/occupation

[testenv:pylint]
# We generally don't use this in automated tests, because it's too strict. Maybe after
# tweaking the config for it!
deps=
  pylint
  django
commands=
  pylint src/occupation

[testenv:mypy]
basepython=python3.6
setenv=
  MYPYPATH=stubs/out
deps=
  mypy
  typing
commands=
  mypy src/occupation

[testenv:status]
deps=
  {[coverage]deps}
  codecov
commands=
  coverage combine
  coverage xml
  codecov -X gcov --file coverage.xml
  -coverage report --fail-under=95
passenv=
  CODECOV_TOKEN

[testenv:dev-status]
deps=
  {[coverage]deps}
commands=
  coverage combine
  coverage report
  rm -rf htmlcov
  coverage html
whitelist_externals=
  /bin/rm

[testenv:mutants]
deps=
  mutpy
commands=
  mut.py --target src/occpation --unit-test tests
